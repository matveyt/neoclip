cmake_minimum_required(VERSION 3.16)
project(neoclip DESCRIPTION "Neovim clipboard provider" LANGUAGES C)

if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    set(CMAKE_BUILD_TYPE "release")
endif()
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_VISIBILITY_PRESET "internal")
list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/extra")
set(CMAKE_SHARED_MODULE_PREFIX "")
set(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}/..")

if(WIN32)
    set(target neoclip_w32)
    set(sources neoclip_w32.c neo_common.c)
elseif(APPLE)
    enable_language(OBJC)
    set(CMAKE_OBJC_VISIBILITY_PRESET "internal")
    set(target neoclip_mac)
    set(sources neoclip_mac.m neo_common.c)
else(UNIX)
    set(target neoclip_x11)
    set(sources neoclip_x.c neo_x11.c neo_common.c)
endif()
add_library(${target} MODULE ${sources})
install(TARGETS ${target} DESTINATION lua PERMISSIONS OWNER_READ OWNER_WRITE)

find_package(LuaJit REQUIRED)
target_include_directories(${target} PRIVATE ${LUAJIT_INCLUDE_DIR})
target_link_libraries(${target} ${LUAJIT_LIBRARIES})

if(APPLE)
    find_library(APPKIT AppKit REQUIRED)
    target_link_libraries(${target} ${APPKIT})
elseif(UNIX)
    find_library(X11 X11 REQUIRED)
    find_package(Threads)
    target_link_libraries(${target} ${X11} ${CMAKE_THREADS_LIB_INIT})

    # Wayland
    find_package(ECM QUIET)
    list(APPEND CMAKE_MODULE_PATH "${ECM_MODULE_PATH}")
    find_package(Wayland QUIET)
    find_package(WaylandScanner QUIET)
    if(Wayland_FOUND AND WaylandScanner_FOUND)
        set(target2 neoclip_wl)
        add_library(${target2} MODULE neoclip_x.c neo_wayland.c neo_common.c)
        install(TARGETS ${target2} DESTINATION lua PERMISSIONS OWNER_READ OWNER_WRITE)

        target_compile_definitions(${target2} PRIVATE -DPLATFORM=Wayland)
        target_include_directories(${target2} PRIVATE ${LUAJIT_INCLUDE_DIR})
        target_link_libraries(${target2} ${LUAJIT_LIBRARIES} ${CMAKE_THREADS_LIB_INIT})

        ecm_add_wayland_client_protocol(wlr_data_control BASENAME wlr-data-control
            PROTOCOL "${PROJECT_SOURCE_DIR}/extra/wlr-data-control-unstable-v1.xml")
        target_sources(${target2} PRIVATE ${wlr_data_control})
        target_include_directories(${target2} PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
        target_link_libraries(${target2} ${Wayland_LIBRARIES})
    endif()
endif()
