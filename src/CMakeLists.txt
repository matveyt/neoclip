cmake_minimum_required(VERSION 3.16)
project(neoclip DESCRIPTION "Neovim clipboard provider" LANGUAGES C)

set(CMAKE_C_VISIBILITY_PRESET hidden)
if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    set(CMAKE_BUILD_TYPE "Release")
endif()
list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
set(CMAKE_SHARED_MODULE_PREFIX "")
set(CMAKE_INSTALL_PREFIX "${PROJECT_SOURCE_DIR}/..")

if(WIN32)
    set(neoclip ${CMAKE_PROJECT_NAME}_w32)
    set(sources ${neoclip}.c neo_common.c)
elseif(APPLE)
    enable_language(OBJC)
    set(CMAKE_OBJC_VISIBILITY_PRESET hidden)
    set(neoclip ${CMAKE_PROJECT_NAME}_mac)
    set(sources ${neoclip}.m neo_common.c)
else(UNIX)
    set(neoclip ${CMAKE_PROJECT_NAME}_x11)
    set(sources ${neoclip}.c neo_x.c neo_common.c)
endif()
add_library(${neoclip} MODULE ${sources})
install(TARGETS ${neoclip} DESTINATION lua PERMISSIONS OWNER_READ OWNER_WRITE)

find_package(LuaJit REQUIRED)
target_include_directories(${neoclip} PRIVATE ${LUAJIT_INCLUDE_DIR})
target_link_libraries(${neoclip} ${LUAJIT_LIBRARIES})

if(APPLE)
    find_library(APPKIT AppKit REQUIRED)
    target_link_libraries(${neoclip} ${APPKIT})
elseif(UNIX)
    find_library(X11 X11 REQUIRED)
    find_package(Threads)
    target_link_libraries(${neoclip} ${X11} ${CMAKE_THREADS_LIB_INIT})
endif()
